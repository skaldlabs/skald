name: Tests
permissions:
    contents: read

on:
    push:
        branches:
            - main
        paths:
            - 'backend/**'
            - '!backend/**.md'
    pull_request:
        paths:
            - 'backend/**'
            - '!backend/**.md'

jobs:
    test:
        name: Run Backend Tests (Shard ${{ matrix.shard }})
        runs-on: ubuntu-latest
        strategy:
            matrix:
                shard: [1, 2, 3, 4]
            fail-fast: false
        defaults:
            run:
                working-directory: backend

        services:
            postgres:
                image: pgvector/pgvector:pg16
                env:
                    POSTGRES_USER: postgres
                    POSTGRES_PASSWORD: 12345678
                    POSTGRES_DB: skald2_test
                ports:
                    - 5432:5432
                options: >-
                    --health-cmd pg_isready
                    --health-interval 10s
                    --health-timeout 5s
                    --health-retries 5

        env:
            DATABASE_URL: postgres://postgres:12345678@localhost:5432/skald2_test
            NODE_ENV: test
            DEBUG: true
            DB_NAME: skald2_test
            DB_USER: postgres
            DB_PASSWORD: '12345678'
            DB_HOST: localhost
            DB_PORT: '5432'
            POSTGRES_PASSWORD: 12345678

        steps:
            - uses: actions/checkout@v4

            - name: Install pnpm
              uses: pnpm/action-setup@v4
              with:
                  version: 9

            - name: Install PostgreSQL client
              run: sudo apt-get update && sudo apt-get install --yes postgresql-client

            - name: Enable pgvector extension
              env:
                  PGPASSWORD: ${{ env.POSTGRES_PASSWORD }}
              run: psql -h localhost -U postgres -d skald2_test -c "CREATE EXTENSION IF NOT EXISTS vector;"

            - name: Set up Node.js
              uses: actions/setup-node@v4
              with:
                  node-version: '20'
                  cache: 'pnpm'
                  cache-dependency-path: backend/pnpm-lock.yaml

            - name: Install dependencies
              run: pnpm install --frozen-lockfile

            - name: Run tests
              run: pnpm test -- --shard=${{ matrix.shard }}/4
