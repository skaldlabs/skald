# See https://fly.io/docs/app-guides/continuous-deployment-with-github-actions/

name: Fly Deploy
on:
  push:
    branches:
      - main
jobs:
  changes:
    name: Detect changes
    runs-on: ubuntu-latest
    outputs:
      api: ${{ steps.filter.outputs.api }}
      frontend: ${{ steps.filter.outputs.frontend }}
      memo-processing: ${{ steps.filter.outputs.memo-processing }}
    steps:
      - uses: actions/checkout@v4
      - uses: dorny/paths-filter@v3
        id: filter
        with:
          filters: |
            api:
              - 'skald/**'
              - 'Dockerfile'
              - 'pyproject.toml'
              - 'manage.py'
              - 'fly.toml'
              - 'bin/start-prod.sh'
            frontend:
              - 'package.json'
              - 'frontend/**'
              - 'ui.fly.toml'
              - 'ui.Dockerfile'
              - 'nginx.conf'
              - 'vite.config.ts'
              - 'tsconfig*.json'
            memo-processing:
              - 'memo-processing-server/**'

  deploy-api:
    name: Deploy API
    needs: changes
    if: needs.changes.outputs.api == 'true'
    runs-on: ubuntu-latest
    concurrency: deploy-api
    steps:
      - uses: actions/checkout@v4
      - uses: superfly/flyctl-actions/setup-flyctl@master
      - run: flyctl deploy --remote-only
        env:
          FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}

  deploy-frontend:
    name: Deploy Frontend
    needs: changes
    if: needs.changes.outputs.frontend == 'true'
    runs-on: ubuntu-latest
    concurrency: deploy-frontend
    steps:
      - uses: actions/checkout@v4
      - uses: superfly/flyctl-actions/setup-flyctl@master
      - run: flyctl deploy -c ui.fly.toml -a skald-platform-ui --remote-only
        env:
          FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}

  deploy-memo-processing:
    name: Deploy Memo Processing Server
    needs: changes
    if: needs.changes.outputs.memo-processing == 'true'
    runs-on: ubuntu-latest
    concurrency: deploy-memo-processing
    steps:
      - uses: actions/checkout@v4
      - uses: superfly/flyctl-actions/setup-flyctl@master
      - run: cd memo-processing-server && flyctl deploy --remote-only
        env:
          FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}
