services:
  db:
    image: pgvector/pgvector:pg17
    environment:
      POSTGRES_DB: skald
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 12345678
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./docker-init:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  rabbitmq:
    image: rabbitmq:3.13-management-alpine
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    ports:
      - "5672:5672"    # AMQP port
      - "15672:15672"  # Management UI port
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq

  api:
    build:
      context: ./backend
      dockerfile: Dockerfile
    command: sh /app/start.sh
    env_file:
      - .env
    environment:
      - NODE_ENV=production
      - EXPRESS_SERVER_PORT=8080
      - DB_HOST=${DB_HOST:-db}
      - DB_PORT=${DB_PORT:-5432}
      - DB_USER=${DB_USER:-postgres}
      - DB_PASSWORD=${DB_PASSWORD:-12345678}
      - DB_NAME=${DB_NAME:-skald}
      - LLM_PROVIDER=${LLM_PROVIDER:-openai}
      - EMBEDDING_PROVIDER=${EMBEDDING_PROVIDER:-openai}
      - OPENAI_API_KEY=${OPENAI_API_KEY:-}
      - VOYAGE_API_KEY=${VOYAGE_API_KEY:-}
      - ANTHROPIC_API_KEY=${ANTHROPIC_API_KEY:-}
      - INTER_PROCESS_QUEUE=rabbitmq
      - RABBITMQ_HOST=${RABBITMQ_HOST:-rabbitmq}
      - RABBITMQ_PORT=${RABBITMQ_PORT:-5672}
      - RABBITMQ_USER=${RABBITMQ_USER:-guest}
      - RABBITMQ_PASSWORD=${RABBITMQ_PASSWORD:-guest}
      - RABBITMQ_VHOST=${RABBITMQ_VHOST:-/}
      - IS_SELF_HOSTED_DEPLOY=true
      - DEBUG=true
      - EMAIL_VERIFICATION_ENABLED=false
      - EMBEDDING_SERVICE_URL=http://embedding-service:8000 # this only applies if EMBEDDING_PROVIDER=local
    ports:
      - "8080:8080"
    depends_on:
      db:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    restart: unless-stopped

  memo-processing-server:
    build:
      context: ./backend
      dockerfile: Dockerfile
    command: node dist/index.js --mode=memo-processing-server
    env_file:
      - .env
    environment:
      - NODE_ENV=production
      - DB_HOST=${DB_HOST:-db}
      - DB_PORT=${DB_PORT:-5432}
      - DB_USER=${DB_USER:-postgres}
      - DB_PASSWORD=${DB_PASSWORD:-12345678}
      - DB_NAME=${DB_NAME:-skald}
      - LLM_PROVIDER=${LLM_PROVIDER:-openai}
      - EMBEDDING_PROVIDER=${EMBEDDING_PROVIDER:-openai}
      - OPENAI_API_KEY=${OPENAI_API_KEY:-}
      - VOYAGE_API_KEY=${VOYAGE_API_KEY:-}
      - ANTHROPIC_API_KEY=${ANTHROPIC_API_KEY:-}
      - INTER_PROCESS_QUEUE=rabbitmq
      - RABBITMQ_HOST=${RABBITMQ_HOST:-rabbitmq}
      - RABBITMQ_PORT=${RABBITMQ_PORT:-5672}
      - RABBITMQ_USER=${RABBITMQ_USER:-guest}
      - RABBITMQ_PASSWORD=${RABBITMQ_PASSWORD:-guest}
      - RABBITMQ_VHOST=${RABBITMQ_VHOST:-/}
      - RABBITMQ_QUEUE_NAME=process_memo
      - DEBUG=true
      - EMBEDDING_SERVICE_URL=http://embedding-service:8000 # this only applies if EMBEDDING_PROVIDER=local
    depends_on:
      db:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    restart: unless-stopped

  ui:
    build:
      context: .
      dockerfile: ui.Dockerfile
      args:
        - VITE_API_HOST=http://localhost:8080
        - VITE_IS_SELF_HOSTED_DEPLOY=true
    ports:
      - "3000:80"
    depends_on:
      - api
    restart: unless-stopped

  embedding-service:
    build:
      context: ./embedding-service
    environment:
      - EMBEDDING_MODEL=${LOCAL_EMBEDDING_MODEL:-all-MiniLM-L6-v2}
      - RERANK_MODEL=${LOCAL_RERANK_MODEL:-cross-encoder/ms-marco-MiniLM-L-6-v2}
      - TARGET_DIMENSION=2048
    ports:
      - "8001:8000"
    profiles:
      - local-embedding
    restart: unless-stopped

volumes:
  postgres_data:
  rabbitmq_data:

